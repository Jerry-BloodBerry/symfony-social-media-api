version: '3.8'

volumes:
  postgres-volume_data:
  rabbitmq:

services:
  php:
    container_name: php-fpm
    build:
      context: .
      dockerfile: .docker/php/Dockerfile
      args:
        TIMEZONE: ${TIMEZONE}
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
    volumes:
      - .:/var/www/app
  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: .docker/nginx/Dockerfile
    depends_on:
      - php
    volumes:
      - .:/var/www/app
    ports:
      - "80:80"
    env_file:
      - .docker/.env.nginx.local
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.12-management-alpine
    volumes:
      - rabbitmq:/var/lib/rabbitmq:cached
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 10s
      retries: 5
  db:
    image: postgres:15.2-alpine3.17
    volumes:
      - postgres-volume_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: social_media_db
      TZ: UTC
      PGTZ: UTC
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
